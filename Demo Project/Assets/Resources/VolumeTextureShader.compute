// VolumeTextureShader.compute

#pragma kernel CSMain

RWStructuredBuffer<float4> ResultBuffer : register(u0);
cbuffer PerObject : register(b0)
{
    float _Time;
    uint _Size;
};

[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (id.x < _Size && id.y < _Size && id.z < _Size)
    {
        // Calculate color based on position and time
        float3 pos = float3(id.xyz) / _Size;
        float r = sin(pos.x * _Time + pos.y * 5.0 + pos.z * 2.0);
        float g = cos(pos.y * _Time + pos.z * 3.0 + pos.x * 1.5);
        float b = sin(pos.z * _Time + pos.x * 2.5 + pos.y * 1.0);

        ResultBuffer[id.x + id.y * _Size + id.z * _Size * _Size] = float4(r * 0.5 + 0.5, g * 0.5 + 0.5, b * 0.5 + 0.5, 1.0);
    }
}